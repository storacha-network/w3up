import type { Generated, TextColumn, Row } from './database.js'
import type { DID, Link, Result, Failure } from '@ucanto/interface'

export interface Consumer {
  /**
   * CID of the invocation that created this subscription
   */
  cause: TextColumn<Link>

  /**
   * Provider that provides service to the customer.
   */
  provider: DID<'web'>

  /**
   * Identifier generated by the provider to identify this subscription.
   */
  order: TextColumn<Link>

  /**
   * DID of the consumer of the consumer space.
   */
  consumer: DID<'key'>
}

export interface ConsumerRecord extends Row<Consumer> {
  /**
   * Unique identifier for this subscription.
   */
  subscription: Generated<string>
}

export interface ConsumerStore {
  // eslint-disable-next-line @typescript-eslint/ban-types
  add: (consumer: Consumer) => Promise<Result<{}, Failure>>

  find: (query: ConsumerQuery) => Promise<Consumer[]>
}

export interface ConsumerQuery {
  provider?: DID<'web'>
  customer?: DID<'mailto'>
  consumer?: DID<'key'>

  order?: string
}
